@model AwesomeMvcDemo.ViewModels.Input.AjaxCheckboxListDemoInput
@using AwesomeMvcDemo.Controllers.Awesome.MultiLookup
@using AwesomeMvcDemo.Models
@{
    ViewBag.Title = "AjaxCheckBoxList, Cascading Checkbox List";
}
<h3>AjaxCheckboxList</h3>
<div class="expl">
    It renders a list of checkboxes, needs an url, js func or controller to get data from.
</div>

@*begin*@
<h3>Cascading CheckboxList using binding to parent</h3>
@(Html.Awe().AjaxCheckboxListFor(o => o.ParentCategory)
                            .Url(Url.Action("GetCategories", "Data")))

@(Html.Awe().AjaxCheckboxListFor(o => o.ChildMeals)
                            .Parent(o => o.ParentCategory, "categories")
                            .Url(Url.Action("GetMeals", "Data")))
@*end*@
<div class="code">
    @Html.Source("AjaxCheckboxListDemo/Index.cshtml")
    @Html.Csource("Awesome/DataController.cs")
</div>
<h3>Bound to many parents</h3>
@(Html.Awe().MultiLookupFor(o => o.CategoriesData)
            .Controller<CategoriesMultiLookupController>()
            .ClearButton())

@(Html.Awe().AjaxRadioListFor(o => o.CategoryData)
            .Url(Url.Action("GetCategories", "Data")))

@(Html.Awe().AjaxCheckboxListFor(o => o.ChildOfManyMeal)
            .Url(Url.Action("GetMeals", "Data"))
            .Parent(o => o.CategoriesData, "categories")
            .Parent(o => o.CategoryData, "categories"))

<h3>Mods</h3>
@*begincr*@

<div class="example">
    <h3>ButtonGroup</h3>

    @(Html.Awe().AjaxCheckboxList("CategoriesButtonGroup")
          .ButtonGroup()
          .Url(Url.Action("GetCategories", "Data")))
</div>

<div class="example">
    <h3>Multiselect</h3>
    <div class="expl">Parent and Child with <code>NoSelectClose()</code>, values can reordered by dragging them</div>
    @(Html.Awe().AjaxCheckboxList("CategoriesMulti")
          .Multiselect()
          .Url(Url.Action("GetCategories", "Data")))

    @(Html.Awe().AjaxCheckboxList("AllMealsMulti")
          .Multiselect(o => o.NoSelectClose())
          .Parent("CategoriesMulti", "categories")
          .Url(Url.Action("GetMeals", "Data")))
</div>

<div class="example">
    <h3>Multiselect Combo</h3>
    <div class="expl">can add values not present in the select list</div>
    @(Html.Awe().AjaxCheckboxList("AllMealsMultiCombo")
          .Multiselect(o => o.NoSelectClose().Combo())
          .Url(Url.Action("GetAllMeals", "Data")))
</div>

<div class="example">
    <div class="expl"><code>awem.multiselb</code>, used in grid columns selector mod</div>
    @(Html.Awe().AjaxCheckboxList("CategoriesMulti2")
          .Mod("awem.multiselb")
          .Tag(new { NoSelClose = 1, InLabel = "categories" })
          .Url(Url.Action("GetCategories", "Data")))
</div>

<div class="example">
    <h3>Multiselect, with custom css</h3>
    @(Html.Awe().AjaxCheckboxList("MealsAll")
            .Multiselect(o => o.NoSelectClose())
            .CssClass("llist")
            .Value(Db.Meals.Take(5).Select(o => o.Id))
            .Url(Url.Action("GetAllMeals", "Data")))
    
    <style>
        .llist {
            width: 250px;
        }

            .llist .o-mlti {
                width: 100%;
            }
    </style>
</div>

@*endcr*@
<div class="code">
    @Html.Source("AjaxCheckboxListDemo/Index.cshtml", "cr")
</div>

<h3>Set value from get items call</h3>
@*beginsv*@
@(Html.Awe().AjaxRadioList("CategorySv")
            .Odropdown(o => o.AutoSelectFirst())
            .Url(Url.Action("GetCategories", "Data")))

@(Html.Awe().AjaxCheckboxList("MealsSv")
            .Parent("CategorySv", "categories")
            .Url(Url.Action("GetMealsSetValue", "Data")))
@*endsv*@
<br/>
<br/>
@(Html.Awe().Tabs()
    .Add("description", "setting selected items in the controller by returning <code>AweItems</code> instead of <code>KeyContent[]</code>", "expl")
    .Add("view", Html.Source("AjaxCheckboxListDemo/Index.cshtml", "sv"))
    .Add("controller", Html.Csource("Awesome/DataController.cs", "gmsv")))

<h3>Using predefined parameters</h3>
@{
    var cat1 = Db.Categories[0];
    var cat2 = Db.Categories[1];
}
setting parameter parent = { @cat1.Name, @cat2.Name } using .Parameter and .ParameterFunc extensions<br />
@(Html.Awe().AjaxCheckboxListFor(o => o.Meals2)
           .Multiselect()
           .Parameter("categories", cat1.Id)
           .ParameterFunc("giveParams")
           .Url(Url.Action("GetMeals", "Data")))
<script>
    function giveParams() {
        return { categories: @(cat2.Id) };
    }
</script>

<h3>Events and Api</h3>
<script>
    $(function () {
        $('#bApi').on('click', function () {
            eval($('#vs').val());
        });

        $('#ApiMeals').on('aweload', function (e, data, rd) {
            $('#log').prepend('aweload handled,\n data: ' + JSON.stringify(data) + "\n request data" + JSON.stringify(rd) + '\n\n');
        }).on('awebeginload', function (e, data) {
            $('#log').prepend('awebeginload handled,\n request data: ' + JSON.stringify(data) + '\n\n');
        });
    });
</script>
<textarea id="vs" rows="3">
    $('#ApiMeals').data('api').load({ params:{ categories: @cat1.Id } });
    // $('#ApiMeals').data('api').load({ params:{ categories: [@cat2.Id, @cat1.Id] } });
</textarea><br />
<button id="bApi" class="awe-btn">Execute</button>

@Html.Awe().AjaxCheckboxList("ApiMeals").Url(Url.Action("GetMeals", "Data")).Load(false)
<br />
<br />
<textarea id="log" rows="5" style="width: 100%">logging events</textarea>
